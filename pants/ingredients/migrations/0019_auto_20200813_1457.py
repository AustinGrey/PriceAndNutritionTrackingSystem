# Generated by Django 3.0.4 on 2020-08-13 04:57

from django.db import migrations, models
import django.db.models.deletion


def add_inheritance(apps, schema_editor):
    """ From no inheritance to item inheritance """
    OldIngredient = apps.get_model('ingredients', 'OldIngredient')
    NewIngredient = apps.get_model('ingredients', 'NewIngredient')
    ItemTag = apps.get_model('ingredients', 'ItemTag')
    RecipeItem = apps.get_model('recipes', 'RecipeItem')
    for ingredient in OldIngredient.objects.all():
        # Create the new inherited ingredient
        inherited_ingredient = NewIngredient.objects.create(name=ingredient.name,
                                                            slug=ingredient.slug,
                                                            description=ingredient.description,
                                                            owner=ingredient.owner,
                                                            serving=ingredient.serving,
                                                            introduction=ingredient.introduction,
                                                            notes=ingredient.notes,
                                                            created_at=ingredient.created_at)
        # Convert all the ingredient tags into item tags and add them
        for ingredienttag in ingredient.tags.all():
            new_item_tag = ItemTag.objects.get_or_create(name=ingredienttag.name,
                                                         description=ingredienttag.description)
            inherited_ingredient.tags.add(new_item_tag[0])

        # Remove as an ingredient to each recipe it belongs to, and add it as an item to the respective recipe
        for component in ingredient.used_in.all():
            new_recipe_item = RecipeItem.objects.create(
                recipe=component.in_recipe,
                item=inherited_ingredient,
                amount=(component.weight or component.servings),
                unit=('g' if component.weight is not None else 'srv')
            )
            component.delete()

        ingredient.delete()


def remove_inheritance(apps, schema_editor):
    """ Rollback """
    OldIngredient = apps.get_model('ingredients', 'OldIngredient')
    NewIngredient = apps.get_model('ingredients', 'NewIngredient')

    for ingredient in NewIngredient.objects.all():
        no_inheritance_ingredient = OldIngredient.objects.create(name=ingredient.name,
                                                                 slug=ingredient.slug,
                                                                 description=ingredient.description,
                                                                 owner=ingredient.owner,
                                                                 tags=ingredient.tags,
                                                                 serving=ingredient.serving,
                                                                 introduction=ingredient.introduction,
                                                                 notes=ingredient.notes,
                                                                 created_at=ingredient.created_at,
                                                                 updated_at=ingredient.updated_at)
        ingredient.delete()


class Migration(migrations.Migration):
    dependencies = [
        ('ingredients', '0018_item_itemtag'),
        ('recipes', '0025_auto_20200813_1448')
    ]

    operations = [
        migrations.RenameModel("Ingredient", "OldIngredient"),
        migrations.CreateModel(
            name='NewIngredient',
            fields=[
                ('item_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='ingredients.Item')),
            ],
            bases=("ingredients.Item",)
        ),
        migrations.AlterModelOptions(
            name='newingredient',
            options={'ordering': ['-updated_at']},
        ),
        migrations.RunPython(add_inheritance, remove_inheritance, atomic=True),
        migrations.DeleteModel('OldIngredient'),
        migrations.RenameModel('NewIngredient', 'Ingredient'),


    ]

    """ Originial operations
    operations = [
        migrations.RemoveField(
            model_name='ingredient',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='description',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='id',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='introduction',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='name',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='serving',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='ingredient',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='ingredient',
            name='item_ptr',
            field=models.OneToOneField(auto_created=True, default=0, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ingredients.Item'),
            preserve_default=False,
        ),

    ]
    """