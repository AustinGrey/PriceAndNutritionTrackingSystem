# Generated by Django 3.0.4 on 2020-11-25 03:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ingredients', '0017_ingredient_owner'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('description', models.CharField(blank=True, max_length=250)),
                ('color', models.CharField(max_length=8)),
                ('icon', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kilojoules', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('protein', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('fibre', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('carbohydrate', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('fat', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('sugar', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('saturatedfat', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('sodium', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=250)),
                ('introduction', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(related_name='tagged_with', to='ingredients.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(blank=True, decimal_places=5, help_text='In kilograms', max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('note', models.CharField(blank=True, max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='ingredients.Food')),
            ],
        ),
        migrations.CreateModel(
            name='CombinationFood',
            fields=[
                ('food_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ingredients.Food')),
                ('components', models.ManyToManyField(related_name='component_set', through='ingredients.BaseComponent', to='ingredients.Food')),
            ],
            options={
                'abstract': False,
            },
            bases=('ingredients.food',),
        ),
        migrations.AddField(
            model_name='basecomponent',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component_of', to='ingredients.CombinationFood'),
        ),
        migrations.CreateModel(
            name='ExtensionFood',
            fields=[
                ('combinationfood_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ingredients.CombinationFood')),
                ('parent_food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_recipe', to='ingredients.CombinationFood')),
            ],
            options={
                'abstract': False,
            },
            bases=('ingredients.combinationfood',),
        ),
    ]

def forwards(apps, schema_editor):
    Ingredient = apps.get_model('ingredients', 'Ingredient')
    Food = apps.get_model('ingredients', 'Food')

    for ingredient in Ingredient.objects.all():
        food = Food()